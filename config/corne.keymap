/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
      conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
   &kp ESC   &kp Q &kp W &kp F &kp P &kp B   &kp J &kp L  &kp U     &kp Y   &kp SQT  &kp BSPC
   &kp TAB   &kp A &kp R &kp S &kp T &kp G   &kp M &kp N  &kp E     &kp I   &kp O    &kp RET
   &kp LSHFT &kp Z &kp X &kp C &kp D &kp V   &kp K &kp H  &kp COMMA &kp DOT &kp FSLH &kp ESC
                  &kp LGUI &kp SPACE &mo 1    &mo 2 &kp LSHFT &kp RALT
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &trans &bt BT_PRV &bt BT_NXT &trans    &trans    &trans      &trans &kp BSPC &kp N8   &kp N9 &kp N0    &kp BSPC
   &trans &sk LCMD   &sk LALT   &sk LCTRL &sk LSHFT &trans      &trans &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans
   &trans &kp LG(Z)  &kp LG(X)  &kp LG(C) &trans    &kp LG(V)   &trans &trans   &trans   &trans &trans    &trans
                                    &trans     &trans       &trans     &trans  &kp RET   &trans
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &trans  &kp TILDE &kp LBKT &kp LBRC &kp LPAR &kp CARET   &kp DLLR &kp RPAR  &kp RBRC &kp RBKT &kp RPAR &trans
   &trans &kp MINUS  &kp STAR &kp EQUAL &kp UNDER &kp COLON      &kp HASH &sk RSHFT &sk RCTRL &sk RALT  &sk RCMD  &trans
   &trans &kp PLUS   &kp EXCL &kp AT  &kp PRCNT  &kp SEMI      &trans &kp PIPE  &kp AMPS &trans &trans &trans
                             &trans &trans   &trans    &trans   &trans    &trans
                        >;
                };

                num_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &trans &kp N7   &kp N5   &kp N3    &kp N1    &kp N9   &kp N8  &kp N0    &kp N2    &kp N4   &kp N6   &trans
   &trans &sk LCMD &sk LALT &sk LCTRL &sk LSHFT &kp F11  &kp F12 &sk RSHFT &sk RCTRL &sk RALT &sk RCMD &trans
   &trans &kp F7   &kp F5   &kp F3    &kp F1    &kp F9   &kp F8  &kp F10    &kp F2    &kp F4   &kp F6   &trans
                            &trans &trans   &trans      &trans   &trans    &trans
                        >;
                };

        };
};
